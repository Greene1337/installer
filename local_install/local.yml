---
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
  - /installer/vars/default.yml
  tasks:
    - name: Prepare folders
      file:
        path: /opt/carrier/
        state: directory
        mode: '0755'

    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'git', 'ca-certificates', 'curl', 'software-properties-common']
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Install required system packages
      yum: name={{ item }} state=latest update_cache=true
      loop: [ 'epel-release', 'yum-utils', 'lvm2', 'git', 'ca-certificates', 'curl' ]
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Install docker-compose
      apt:
        name: docker-compose
        state: present
        update_cache: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Install docker-compose
      get_url:
        url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - git:
        repo: https://github.com/carrier-io/carrier-io.git
        dest: /opt/temp/
      ignore_errors: yes

    - name: Remove unimportant files
      shell: mv /opt/temp/dev /opt/carrier && rm -rf /opt/temp/

    - name: Replace App Host
      replace:
        path: /opt/carrier/dev/.env
        regexp: 'http://localhost'
        replace: "http://{{ APP_HOST }}"

    - name: Replace install path
      replace:
        path: /opt/carrier/dev/.env
        regexp: '/opt/carrier'
        replace: "{{ CARRIER_PATH }}"

    - name: Create and start services
      shell: cd /opt/carrier/dev && docker-compose up -d
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      register: output

    - name: Create and start services
      shell: cd /opt/carrier/dev && /usr/local/bin/docker-compose up -d
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
      register: output

    - name: Wait until the services fully load
      command: sleep 35

    - name: Copy files
      copy:
        src: /installer/bootstrap.sh
        dest: /opt/carrier/dev/bootstrap.sh
        force: yes

    - name: bootstrap
      shell: bash /opt/carrier/dev/bootstrap.sh

    - debug:
        var: output
